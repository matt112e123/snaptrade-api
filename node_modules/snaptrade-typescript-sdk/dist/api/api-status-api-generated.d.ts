import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Status } from '../models';
/**
 * ApiStatusApi - axios parameter creator
 * @export
 */
export declare const ApiStatusApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Check whether the API is operational and verify timestamps.
     * @summary Get API Status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ApiStatusApi - functional programming interface
 * @export
 */
export declare const ApiStatusApiFp: (configuration?: Configuration) => {
    /**
     * Check whether the API is operational and verify timestamps.
     * @summary Get API Status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Status>>;
};
/**
 * ApiStatusApi - factory interface
 * @export
 */
export declare const ApiStatusApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Check whether the API is operational and verify timestamps.
     * @summary Get API Status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check(options?: AxiosRequestConfig): AxiosPromise<Status>;
};
/**
 * ApiStatusApiGenerated - object-oriented interface
 * @export
 * @class ApiStatusApiGenerated
 * @extends {BaseAPI}
 */
export declare class ApiStatusApiGenerated extends BaseAPI {
    /**
     * Check whether the API is operational and verify timestamps.
     * @summary Get API Status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiStatusApiGenerated
     */
    check(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Status, any>>;
}
